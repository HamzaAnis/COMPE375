
Lab 3 part 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000190  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001e4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000214  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000254  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000285  00000000  00000000  0000029c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000016f  00000000  00000000  00000521  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000041f  00000000  00000000  00000690  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a8  00000000  00000000  00000ab0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00006b55  00000000  00000000  00000b58  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001dc  00000000  00000000  000076ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00007889  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000021f  00000000  00000000  000078c1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	39 c0       	rjmp	.+114    	; 0x78 <__bad_interrupt>
   6:	00 00       	nop
   8:	37 c0       	rjmp	.+110    	; 0x78 <__bad_interrupt>
   a:	00 00       	nop
   c:	35 c0       	rjmp	.+106    	; 0x78 <__bad_interrupt>
   e:	00 00       	nop
  10:	33 c0       	rjmp	.+102    	; 0x78 <__bad_interrupt>
  12:	00 00       	nop
  14:	31 c0       	rjmp	.+98     	; 0x78 <__bad_interrupt>
  16:	00 00       	nop
  18:	2f c0       	rjmp	.+94     	; 0x78 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	2d c0       	rjmp	.+90     	; 0x78 <__bad_interrupt>
  1e:	00 00       	nop
  20:	2b c0       	rjmp	.+86     	; 0x78 <__bad_interrupt>
  22:	00 00       	nop
  24:	29 c0       	rjmp	.+82     	; 0x78 <__bad_interrupt>
  26:	00 00       	nop
  28:	27 c0       	rjmp	.+78     	; 0x78 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	25 c0       	rjmp	.+74     	; 0x78 <__bad_interrupt>
  2e:	00 00       	nop
  30:	23 c0       	rjmp	.+70     	; 0x78 <__bad_interrupt>
  32:	00 00       	nop
  34:	21 c0       	rjmp	.+66     	; 0x78 <__bad_interrupt>
  36:	00 00       	nop
  38:	1f c0       	rjmp	.+62     	; 0x78 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	1d c0       	rjmp	.+58     	; 0x78 <__bad_interrupt>
  3e:	00 00       	nop
  40:	1b c0       	rjmp	.+54     	; 0x78 <__bad_interrupt>
  42:	00 00       	nop
  44:	19 c0       	rjmp	.+50     	; 0x78 <__bad_interrupt>
  46:	00 00       	nop
  48:	17 c0       	rjmp	.+46     	; 0x78 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	15 c0       	rjmp	.+42     	; 0x78 <__bad_interrupt>
  4e:	00 00       	nop
  50:	13 c0       	rjmp	.+38     	; 0x78 <__bad_interrupt>
  52:	00 00       	nop
  54:	11 c0       	rjmp	.+34     	; 0x78 <__bad_interrupt>
  56:	00 00       	nop
  58:	0f c0       	rjmp	.+30     	; 0x78 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	0d c0       	rjmp	.+26     	; 0x78 <__bad_interrupt>
  5e:	00 00       	nop
  60:	0b c0       	rjmp	.+22     	; 0x78 <__bad_interrupt>
  62:	00 00       	nop
  64:	09 c0       	rjmp	.+18     	; 0x78 <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	6b d0       	rcall	.+214    	; 0x14c <main>
  76:	8a c0       	rjmp	.+276    	; 0x18c <_exit>

00000078 <__bad_interrupt>:
  78:	c3 cf       	rjmp	.-122    	; 0x0 <__vectors>

0000007a <PWM_Init>:
		//stop timer
	}
}

void PWM_Init(){
	TCCR1B |= (1<<CS10) | (1<<WGM12);
  7a:	e1 e8       	ldi	r30, 0x81	; 129
  7c:	f0 e0       	ldi	r31, 0x00	; 0
  7e:	80 81       	ld	r24, Z
  80:	89 60       	ori	r24, 0x09	; 9
  82:	80 83       	st	Z, r24
	TIMSK1 |= (1<<OCIE1A) | (1<<OCIE1B);
  84:	ef e6       	ldi	r30, 0x6F	; 111
  86:	f0 e0       	ldi	r31, 0x00	; 0
  88:	80 81       	ld	r24, Z
  8a:	86 60       	ori	r24, 0x06	; 6
  8c:	80 83       	st	Z, r24
	//OCR1A = (F_CPU/(freq*2*256)-1);
	OCR1A = 8000;
  8e:	80 e4       	ldi	r24, 0x40	; 64
  90:	9f e1       	ldi	r25, 0x1F	; 31
  92:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  96:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  9a:	08 95       	ret

0000009c <milliS_timer>:
}

void milliS_timer(uint8_t milliS){
	TCCR0A |= (1<<WGM01);
  9c:	94 b5       	in	r25, 0x24	; 36
  9e:	92 60       	ori	r25, 0x02	; 2
  a0:	94 bd       	out	0x24, r25	; 36
	TCCR0B |= (1<<CS02) | (1<<CS00);
  a2:	95 b5       	in	r25, 0x25	; 37
  a4:	95 60       	ori	r25, 0x05	; 5
  a6:	95 bd       	out	0x25, r25	; 37
	OCR0A = milliS*7,8125-1;
  a8:	98 2f       	mov	r25, r24
  aa:	99 0f       	add	r25, r25
  ac:	99 0f       	add	r25, r25
  ae:	99 0f       	add	r25, r25
  b0:	98 1b       	sub	r25, r24
  b2:	97 bd       	out	0x27, r25	; 39
	TIMSK0 = (1<<OCIE0A);
  b4:	82 e0       	ldi	r24, 0x02	; 2
  b6:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
  ba:	08 95       	ret

000000bc <delay>:
		PORTB &= (0<<PORTB5);
		delay(x);
		x += 1;
	}
}
void delay(int x) {		//delay for inc/dec brightness function
  bc:	ff 92       	push	r15
  be:	0f 93       	push	r16
  c0:	1f 93       	push	r17
  c2:	cf 93       	push	r28
  c4:	df 93       	push	r29
	for (int i = 0; i < x; i++) {
  c6:	18 16       	cp	r1, r24
  c8:	19 06       	cpc	r1, r25
  ca:	84 f4       	brge	.+32     	; 0xec <delay+0x30>
  cc:	8c 01       	movw	r16, r24
  ce:	c0 e0       	ldi	r28, 0x00	; 0
  d0:	d0 e0       	ldi	r29, 0x00	; 0
		PWM_Init();
		milliS_timer(1);
		//wait till timer expire
		while (!(TIFR1 & (1<<OCF1A)));
		TIFR1 = (1<<OCF1A);		//clear the flag
  d2:	68 94       	set
  d4:	ff 24       	eor	r15, r15
  d6:	f1 f8       	bld	r15, 1
		x += 1;
	}
}
void delay(int x) {		//delay for inc/dec brightness function
	for (int i = 0; i < x; i++) {
		PWM_Init();
  d8:	d0 df       	rcall	.-96     	; 0x7a <PWM_Init>
		milliS_timer(1);
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	df df       	rcall	.-66     	; 0x9c <milliS_timer>
		//wait till timer expire
		while (!(TIFR1 & (1<<OCF1A)));
  de:	b1 9b       	sbis	0x16, 1	; 22
  e0:	fe cf       	rjmp	.-4      	; 0xde <delay+0x22>
		TIFR1 = (1<<OCF1A);		//clear the flag
  e2:	f6 ba       	out	0x16, r15	; 22
		delay(x);
		x += 1;
	}
}
void delay(int x) {		//delay for inc/dec brightness function
	for (int i = 0; i < x; i++) {
  e4:	21 96       	adiw	r28, 0x01	; 1
  e6:	c0 17       	cp	r28, r16
  e8:	d1 07       	cpc	r29, r17
  ea:	b1 f7       	brne	.-20     	; 0xd8 <delay+0x1c>
		//wait till timer expire
		while (!(TIFR1 & (1<<OCF1A)));
		TIFR1 = (1<<OCF1A);		//clear the flag
		//stop timer
	}
}
  ec:	df 91       	pop	r29
  ee:	cf 91       	pop	r28
  f0:	1f 91       	pop	r17
  f2:	0f 91       	pop	r16
  f4:	ff 90       	pop	r15
  f6:	08 95       	ret

000000f8 <increaseBrightness>:
			button = 0;		//reset to starting point
		}
	}
}

void increaseBrightness() {
  f8:	cf 93       	push	r28
  fa:	df 93       	push	r29
	int x = 100;		// max limit value
  fc:	c4 e6       	ldi	r28, 0x64	; 100
  fe:	d0 e0       	ldi	r29, 0x00	; 0
	while(x >= 0) {
		PORTB |= (1<<PORTB5);		//Turn 6th bit on PORTB (i.e. PB5) to 1; on
 100:	2d 9a       	sbi	0x05, 5	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 102:	8f e9       	ldi	r24, 0x9F	; 159
 104:	9f e0       	ldi	r25, 0x0F	; 15
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <increaseBrightness+0xe>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <increaseBrightness+0x14>
 10c:	00 00       	nop
		_delay_ms(1);
		PORTB &= (0<<PORTB5);		//set PORTB5 to 0;
 10e:	85 b1       	in	r24, 0x05	; 5
 110:	15 b8       	out	0x05, r1	; 5
		delay(x);
 112:	ce 01       	movw	r24, r28
 114:	d3 df       	rcall	.-90     	; 0xbc <delay>
		x -= 1;
 116:	21 97       	sbiw	r28, 0x01	; 1
 118:	98 f7       	brcc	.-26     	; 0x100 <increaseBrightness+0x8>
	}
}
 11a:	df 91       	pop	r29
 11c:	cf 91       	pop	r28
 11e:	08 95       	ret

00000120 <decreaseBrightness>:

void decreaseBrightness() {
 120:	cf 93       	push	r28
 122:	df 93       	push	r29
	int x = 1;
 124:	c1 e0       	ldi	r28, 0x01	; 1
 126:	d0 e0       	ldi	r29, 0x00	; 0
	while(x <= 100) {
		PORTB |= (1<<PORTB5);
 128:	2d 9a       	sbi	0x05, 5	; 5
 12a:	8f e9       	ldi	r24, 0x9F	; 159
 12c:	9f e0       	ldi	r25, 0x0F	; 15
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <decreaseBrightness+0xe>
 132:	00 c0       	rjmp	.+0      	; 0x134 <decreaseBrightness+0x14>
 134:	00 00       	nop
		_delay_ms(1);
		PORTB &= (0<<PORTB5);
 136:	85 b1       	in	r24, 0x05	; 5
 138:	15 b8       	out	0x05, r1	; 5
		delay(x);
 13a:	ce 01       	movw	r24, r28
 13c:	bf df       	rcall	.-130    	; 0xbc <delay>
		x += 1;
 13e:	21 96       	adiw	r28, 0x01	; 1
	}
}

void decreaseBrightness() {
	int x = 1;
	while(x <= 100) {
 140:	c5 36       	cpi	r28, 0x65	; 101
 142:	d1 05       	cpc	r29, r1
 144:	89 f7       	brne	.-30     	; 0x128 <decreaseBrightness+0x8>
		_delay_ms(1);
		PORTB &= (0<<PORTB5);
		delay(x);
		x += 1;
	}
}
 146:	df 91       	pop	r29
 148:	cf 91       	pop	r28
 14a:	08 95       	ret

0000014c <main>:
void decreaseBrightness(void);
void milliS_timer(uint8_t milliS);
void PWM_Init();

int main(void) {
	DDRB |= (1<<DDB5);		//Set port bit B5 in data direction register to 1: an Output
 14c:	25 9a       	sbi	0x04, 5	; 4
	DDRB &= ~(1<<DDB7);		//Set port bit B7; 0
 14e:	27 98       	cbi	0x04, 7	; 4
	int button = 0;			//integer to set initial starting point; button is not pressed
 150:	80 e0       	ldi	r24, 0x00	; 0
 152:	90 e0       	ldi	r25, 0x00	; 0
				}
			}
		}
		while((PINB & (1<<PINB7)) && button == 1) {		//button is let go and was pressed
			decreaseBrightness();
			button = 0;		//reset to starting point
 154:	d0 e0       	ldi	r29, 0x00	; 0
 156:	c0 e0       	ldi	r28, 0x00	; 0
						break;
					}
				}
			}
		}
		while((PINB & (1<<PINB7)) && button == 1) {		//button is let go and was pressed
 158:	01 e0       	ldi	r16, 0x01	; 1
 15a:	10 e0       	ldi	r17, 0x00	; 0
int main(void) {
	DDRB |= (1<<DDB5);		//Set port bit B5 in data direction register to 1: an Output
	DDRB &= ~(1<<DDB7);		//Set port bit B7; 0
	int button = 0;			//integer to set initial starting point; button is not pressed
	while(1) {
		if(!(PINB & (1<<PINB7))) {	//if button pressed/held
 15c:	1f 99       	sbic	0x03, 7	; 3
 15e:	07 c0       	rjmp	.+14     	; 0x16e <main+0x22>
			increaseBrightness();
 160:	cb df       	rcall	.-106    	; 0xf8 <increaseBrightness>
			button = 1;				//button pressed
			if(!(PINB & (1<<PINB7)) && button == 1) {	//returns true if buttons held and was pressed
 162:	1f 99       	sbic	0x03, 7	; 3
 164:	0e c0       	rjmp	.+28     	; 0x182 <main+0x36>
				while(1){
					PORTB |= (1<<PORTB5); // Set port bit B5 to 1 to turn on the LED
 166:	2d 9a       	sbi	0x05, 5	; 5
					if(PINB & (1<<PINB7)) {		//if button is let go, break loop
 168:	1f 9b       	sbis	0x03, 7	; 3
 16a:	fd cf       	rjmp	.-6      	; 0x166 <main+0x1a>
 16c:	0a c0       	rjmp	.+20     	; 0x182 <main+0x36>
						break;
					}
				}
			}
		}
		while((PINB & (1<<PINB7)) && button == 1) {		//button is let go and was pressed
 16e:	1f 9b       	sbis	0x03, 7	; 3
 170:	f5 cf       	rjmp	.-22     	; 0x15c <main+0x10>
 172:	81 30       	cpi	r24, 0x01	; 1
 174:	91 05       	cpc	r25, r1
 176:	91 f7       	brne	.-28     	; 0x15c <main+0x10>
			decreaseBrightness();
 178:	d3 df       	rcall	.-90     	; 0x120 <decreaseBrightness>
						break;
					}
				}
			}
		}
		while((PINB & (1<<PINB7)) && button == 1) {		//button is let go and was pressed
 17a:	83 b1       	in	r24, 0x03	; 3
			decreaseBrightness();
			button = 0;		//reset to starting point
 17c:	8d 2f       	mov	r24, r29
 17e:	9c 2f       	mov	r25, r28
 180:	ed cf       	rjmp	.-38     	; 0x15c <main+0x10>
						break;
					}
				}
			}
		}
		while((PINB & (1<<PINB7)) && button == 1) {		//button is let go and was pressed
 182:	1f 99       	sbic	0x03, 7	; 3
 184:	f9 cf       	rjmp	.-14     	; 0x178 <main+0x2c>
 186:	80 2f       	mov	r24, r16
 188:	91 2f       	mov	r25, r17
 18a:	e8 cf       	rjmp	.-48     	; 0x15c <main+0x10>

0000018c <_exit>:
 18c:	f8 94       	cli

0000018e <__stop_program>:
 18e:	ff cf       	rjmp	.-2      	; 0x18e <__stop_program>
