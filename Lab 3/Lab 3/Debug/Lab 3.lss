
Lab 3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000408  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003b4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000408  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000438  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  00000478  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000283  00000000  00000000  000004b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000158  00000000  00000000  00000733  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003bb  00000000  00000000  0000088b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000008c  00000000  00000000  00000c48  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00006b36  00000000  00000000  00000cd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000021a  00000000  00000000  0000780a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00007a24  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000021f  00000000  00000000  00007a4c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	39 c0       	rjmp	.+114    	; 0x78 <__bad_interrupt>
   6:	00 00       	nop
   8:	37 c0       	rjmp	.+110    	; 0x78 <__bad_interrupt>
   a:	00 00       	nop
   c:	35 c0       	rjmp	.+106    	; 0x78 <__bad_interrupt>
   e:	00 00       	nop
  10:	33 c0       	rjmp	.+102    	; 0x78 <__bad_interrupt>
  12:	00 00       	nop
  14:	31 c0       	rjmp	.+98     	; 0x78 <__bad_interrupt>
  16:	00 00       	nop
  18:	2f c0       	rjmp	.+94     	; 0x78 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	2d c0       	rjmp	.+90     	; 0x78 <__bad_interrupt>
  1e:	00 00       	nop
  20:	2b c0       	rjmp	.+86     	; 0x78 <__bad_interrupt>
  22:	00 00       	nop
  24:	29 c0       	rjmp	.+82     	; 0x78 <__bad_interrupt>
  26:	00 00       	nop
  28:	27 c0       	rjmp	.+78     	; 0x78 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	25 c0       	rjmp	.+74     	; 0x78 <__bad_interrupt>
  2e:	00 00       	nop
  30:	23 c0       	rjmp	.+70     	; 0x78 <__bad_interrupt>
  32:	00 00       	nop
  34:	21 c0       	rjmp	.+66     	; 0x78 <__bad_interrupt>
  36:	00 00       	nop
  38:	1f c0       	rjmp	.+62     	; 0x78 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	1d c0       	rjmp	.+58     	; 0x78 <__bad_interrupt>
  3e:	00 00       	nop
  40:	1b c0       	rjmp	.+54     	; 0x78 <__bad_interrupt>
  42:	00 00       	nop
  44:	19 c0       	rjmp	.+50     	; 0x78 <__bad_interrupt>
  46:	00 00       	nop
  48:	17 c0       	rjmp	.+46     	; 0x78 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	15 c0       	rjmp	.+42     	; 0x78 <__bad_interrupt>
  4e:	00 00       	nop
  50:	13 c0       	rjmp	.+38     	; 0x78 <__bad_interrupt>
  52:	00 00       	nop
  54:	11 c0       	rjmp	.+34     	; 0x78 <__bad_interrupt>
  56:	00 00       	nop
  58:	0f c0       	rjmp	.+30     	; 0x78 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	0d c0       	rjmp	.+26     	; 0x78 <__bad_interrupt>
  5e:	00 00       	nop
  60:	0b c0       	rjmp	.+22     	; 0x78 <__bad_interrupt>
  62:	00 00       	nop
  64:	09 c0       	rjmp	.+18     	; 0x78 <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	64 d0       	rcall	.+200    	; 0x13e <main>
  76:	9c c1       	rjmp	.+824    	; 0x3b0 <_exit>

00000078 <__bad_interrupt>:
  78:	c3 cf       	rjmp	.-122    	; 0x0 <__vectors>

0000007a <delay>:
		PORTB &= (0<<PORTB5);
		delay(x);
		x += 1;
	}
}
void delay(float x) {		//delay for inc/dec brightness function
  7a:	cf 92       	push	r12
  7c:	df 92       	push	r13
  7e:	ef 92       	push	r14
  80:	ff 92       	push	r15
  82:	cf 93       	push	r28
  84:	df 93       	push	r29
	x = x * 25;
  86:	20 e0       	ldi	r18, 0x00	; 0
  88:	30 e0       	ldi	r19, 0x00	; 0
  8a:	48 ec       	ldi	r20, 0xC8	; 200
  8c:	51 e4       	ldi	r21, 0x41	; 65
  8e:	b8 d0       	rcall	.+368    	; 0x200 <__mulsf3>
  90:	6b 01       	movw	r12, r22
  92:	7c 01       	movw	r14, r24
	for (int i = 0; i < x; i++) {
  94:	20 e0       	ldi	r18, 0x00	; 0
  96:	30 e0       	ldi	r19, 0x00	; 0
  98:	a9 01       	movw	r20, r18
  9a:	ae d0       	rcall	.+348    	; 0x1f8 <__gesf2>
  9c:	18 16       	cp	r1, r24
  9e:	a4 f4       	brge	.+40     	; 0xc8 <delay+0x4e>
  a0:	c0 e0       	ldi	r28, 0x00	; 0
  a2:	d0 e0       	ldi	r29, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a4:	85 e0       	ldi	r24, 0x05	; 5
  a6:	8a 95       	dec	r24
  a8:	f1 f7       	brne	.-4      	; 0xa6 <delay+0x2c>
  aa:	00 00       	nop
  ac:	21 96       	adiw	r28, 0x01	; 1
  ae:	be 01       	movw	r22, r28
  b0:	0d 2e       	mov	r0, r29
  b2:	00 0c       	add	r0, r0
  b4:	88 0b       	sbc	r24, r24
  b6:	99 0b       	sbc	r25, r25
  b8:	64 d0       	rcall	.+200    	; 0x182 <__floatsisf>
  ba:	9b 01       	movw	r18, r22
  bc:	ac 01       	movw	r20, r24
  be:	c7 01       	movw	r24, r14
  c0:	b6 01       	movw	r22, r12
  c2:	9a d0       	rcall	.+308    	; 0x1f8 <__gesf2>
  c4:	18 16       	cp	r1, r24
  c6:	74 f3       	brlt	.-36     	; 0xa4 <delay+0x2a>
	_delay_us(1);
	}
  c8:	df 91       	pop	r29
  ca:	cf 91       	pop	r28
  cc:	ff 90       	pop	r15
  ce:	ef 90       	pop	r14
  d0:	df 90       	pop	r13
  d2:	cf 90       	pop	r12
  d4:	08 95       	ret

000000d6 <increaseBrightness>:
			button = 0;		//reset to starting point
		}
	}
}

void increaseBrightness() {
  d6:	cf 93       	push	r28
  d8:	df 93       	push	r29
	int x = 100;		// max limit value
  da:	c4 e6       	ldi	r28, 0x64	; 100
  dc:	d0 e0       	ldi	r29, 0x00	; 0
	while(x >= 0) {
		PORTB |= (1<<PORTB5);		//Turn 6th bit on PORTB (i.e. PB5) to 1; on
  de:	2d 9a       	sbi	0x05, 5	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e0:	8f e9       	ldi	r24, 0x9F	; 159
  e2:	9f e0       	ldi	r25, 0x0F	; 15
  e4:	01 97       	sbiw	r24, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <increaseBrightness+0xe>
  e8:	00 c0       	rjmp	.+0      	; 0xea <increaseBrightness+0x14>
  ea:	00 00       	nop
		_delay_ms(1);
		PORTB &= (0<<PORTB5);		//set PORTB5 to 0;
  ec:	85 b1       	in	r24, 0x05	; 5
  ee:	15 b8       	out	0x05, r1	; 5
		delay(x);
  f0:	be 01       	movw	r22, r28
  f2:	0d 2e       	mov	r0, r29
  f4:	00 0c       	add	r0, r0
  f6:	88 0b       	sbc	r24, r24
  f8:	99 0b       	sbc	r25, r25
  fa:	43 d0       	rcall	.+134    	; 0x182 <__floatsisf>
  fc:	be df       	rcall	.-132    	; 0x7a <delay>
		x -= 1;
  fe:	21 97       	sbiw	r28, 0x01	; 1
 100:	70 f7       	brcc	.-36     	; 0xde <increaseBrightness+0x8>
	}
}
 102:	df 91       	pop	r29
 104:	cf 91       	pop	r28
 106:	08 95       	ret

00000108 <decreaseBrightness>:

void decreaseBrightness() {
 108:	cf 93       	push	r28
 10a:	df 93       	push	r29
	int x = 1;
 10c:	c1 e0       	ldi	r28, 0x01	; 1
 10e:	d0 e0       	ldi	r29, 0x00	; 0
	while(x <= 100) {
		PORTB |= (1<<PORTB5);
 110:	2d 9a       	sbi	0x05, 5	; 5
 112:	8f e9       	ldi	r24, 0x9F	; 159
 114:	9f e0       	ldi	r25, 0x0F	; 15
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <decreaseBrightness+0xe>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <decreaseBrightness+0x14>
 11c:	00 00       	nop
		_delay_ms(1);
		PORTB &= (0<<PORTB5);
 11e:	85 b1       	in	r24, 0x05	; 5
 120:	15 b8       	out	0x05, r1	; 5
		delay(x);
 122:	be 01       	movw	r22, r28
 124:	0d 2e       	mov	r0, r29
 126:	00 0c       	add	r0, r0
 128:	88 0b       	sbc	r24, r24
 12a:	99 0b       	sbc	r25, r25
 12c:	2a d0       	rcall	.+84     	; 0x182 <__floatsisf>
 12e:	a5 df       	rcall	.-182    	; 0x7a <delay>
		x += 1;
 130:	21 96       	adiw	r28, 0x01	; 1
	}
}

void decreaseBrightness() {
	int x = 1;
	while(x <= 100) {
 132:	c5 36       	cpi	r28, 0x65	; 101
 134:	d1 05       	cpc	r29, r1
 136:	61 f7       	brne	.-40     	; 0x110 <decreaseBrightness+0x8>
		_delay_ms(1);
		PORTB &= (0<<PORTB5);
		delay(x);
		x += 1;
	}
}
 138:	df 91       	pop	r29
 13a:	cf 91       	pop	r28
 13c:	08 95       	ret

0000013e <main>:
void delay(float x);
void increaseBrightness(void);
void decreaseBrightness(void);

int main(void) {
	DDRB |= (1<<DDB5);		//Set port bit B5 in data direction register to 1: an Output
 13e:	25 9a       	sbi	0x04, 5	; 4
	DDRB &= ~(1<<DDB7);		//Set port bit B7; 0
 140:	27 98       	cbi	0x04, 7	; 4
	int button = 0;			//integer to set initial starting point; button is not pressed
 142:	80 e0       	ldi	r24, 0x00	; 0
 144:	90 e0       	ldi	r25, 0x00	; 0
				}
			}
		}
		while((PINB & (1<<PINB7)) && button == 1) {		//button is let go and was pressed
			decreaseBrightness();
			button = 0;		//reset to starting point
 146:	d0 e0       	ldi	r29, 0x00	; 0
 148:	c0 e0       	ldi	r28, 0x00	; 0
					break;
					}
				}
			}
		}
		while((PINB & (1<<PINB7)) && button == 1) {		//button is let go and was pressed
 14a:	01 e0       	ldi	r16, 0x01	; 1
 14c:	10 e0       	ldi	r17, 0x00	; 0
	DDRB |= (1<<DDB5);		//Set port bit B5 in data direction register to 1: an Output
	DDRB &= ~(1<<DDB7);		//Set port bit B7; 0
	int button = 0;			//integer to set initial starting point; button is not pressed
	
	while(1) {
		if(!(PINB & (1<<PINB7))) {	//if button pressed/held
 14e:	1f 99       	sbic	0x03, 7	; 3
 150:	07 c0       	rjmp	.+14     	; 0x160 <main+0x22>
			increaseBrightness();
 152:	c1 df       	rcall	.-126    	; 0xd6 <increaseBrightness>
			button = 1;				//button pressed
			if(!(PINB & (1<<PINB7)) && button == 1) {	//returns true if buttons held and was pressed
 154:	1f 99       	sbic	0x03, 7	; 3
 156:	0e c0       	rjmp	.+28     	; 0x174 <main+0x36>
				while(1){
					PORTB |= (1<<PORTB5); // Set port bit B5 to 1 to turn on the LED
 158:	2d 9a       	sbi	0x05, 5	; 5
					if(PINB & (1<<PINB7)) {		//if button is let go, break loop
 15a:	1f 9b       	sbis	0x03, 7	; 3
 15c:	fd cf       	rjmp	.-6      	; 0x158 <main+0x1a>
 15e:	0a c0       	rjmp	.+20     	; 0x174 <main+0x36>
					break;
					}
				}
			}
		}
		while((PINB & (1<<PINB7)) && button == 1) {		//button is let go and was pressed
 160:	1f 9b       	sbis	0x03, 7	; 3
 162:	f5 cf       	rjmp	.-22     	; 0x14e <main+0x10>
 164:	81 30       	cpi	r24, 0x01	; 1
 166:	91 05       	cpc	r25, r1
 168:	91 f7       	brne	.-28     	; 0x14e <main+0x10>
			decreaseBrightness();
 16a:	ce df       	rcall	.-100    	; 0x108 <decreaseBrightness>
					break;
					}
				}
			}
		}
		while((PINB & (1<<PINB7)) && button == 1) {		//button is let go and was pressed
 16c:	83 b1       	in	r24, 0x03	; 3
			decreaseBrightness();
			button = 0;		//reset to starting point
 16e:	8d 2f       	mov	r24, r29
 170:	9c 2f       	mov	r25, r28
 172:	ed cf       	rjmp	.-38     	; 0x14e <main+0x10>
					break;
					}
				}
			}
		}
		while((PINB & (1<<PINB7)) && button == 1) {		//button is let go and was pressed
 174:	1f 99       	sbic	0x03, 7	; 3
 176:	f9 cf       	rjmp	.-14     	; 0x16a <main+0x2c>
 178:	80 2f       	mov	r24, r16
 17a:	91 2f       	mov	r25, r17
 17c:	e8 cf       	rjmp	.-48     	; 0x14e <main+0x10>

0000017e <__floatunsisf>:
 17e:	e8 94       	clt
 180:	09 c0       	rjmp	.+18     	; 0x194 <__floatsisf+0x12>

00000182 <__floatsisf>:
 182:	97 fb       	bst	r25, 7
 184:	3e f4       	brtc	.+14     	; 0x194 <__floatsisf+0x12>
 186:	90 95       	com	r25
 188:	80 95       	com	r24
 18a:	70 95       	com	r23
 18c:	61 95       	neg	r22
 18e:	7f 4f       	sbci	r23, 0xFF	; 255
 190:	8f 4f       	sbci	r24, 0xFF	; 255
 192:	9f 4f       	sbci	r25, 0xFF	; 255
 194:	99 23       	and	r25, r25
 196:	a9 f0       	breq	.+42     	; 0x1c2 <__floatsisf+0x40>
 198:	f9 2f       	mov	r31, r25
 19a:	96 e9       	ldi	r25, 0x96	; 150
 19c:	bb 27       	eor	r27, r27
 19e:	93 95       	inc	r25
 1a0:	f6 95       	lsr	r31
 1a2:	87 95       	ror	r24
 1a4:	77 95       	ror	r23
 1a6:	67 95       	ror	r22
 1a8:	b7 95       	ror	r27
 1aa:	f1 11       	cpse	r31, r1
 1ac:	f8 cf       	rjmp	.-16     	; 0x19e <__floatsisf+0x1c>
 1ae:	fa f4       	brpl	.+62     	; 0x1ee <__floatsisf+0x6c>
 1b0:	bb 0f       	add	r27, r27
 1b2:	11 f4       	brne	.+4      	; 0x1b8 <__floatsisf+0x36>
 1b4:	60 ff       	sbrs	r22, 0
 1b6:	1b c0       	rjmp	.+54     	; 0x1ee <__floatsisf+0x6c>
 1b8:	6f 5f       	subi	r22, 0xFF	; 255
 1ba:	7f 4f       	sbci	r23, 0xFF	; 255
 1bc:	8f 4f       	sbci	r24, 0xFF	; 255
 1be:	9f 4f       	sbci	r25, 0xFF	; 255
 1c0:	16 c0       	rjmp	.+44     	; 0x1ee <__floatsisf+0x6c>
 1c2:	88 23       	and	r24, r24
 1c4:	11 f0       	breq	.+4      	; 0x1ca <__floatsisf+0x48>
 1c6:	96 e9       	ldi	r25, 0x96	; 150
 1c8:	11 c0       	rjmp	.+34     	; 0x1ec <__floatsisf+0x6a>
 1ca:	77 23       	and	r23, r23
 1cc:	21 f0       	breq	.+8      	; 0x1d6 <__floatsisf+0x54>
 1ce:	9e e8       	ldi	r25, 0x8E	; 142
 1d0:	87 2f       	mov	r24, r23
 1d2:	76 2f       	mov	r23, r22
 1d4:	05 c0       	rjmp	.+10     	; 0x1e0 <__floatsisf+0x5e>
 1d6:	66 23       	and	r22, r22
 1d8:	71 f0       	breq	.+28     	; 0x1f6 <__floatsisf+0x74>
 1da:	96 e8       	ldi	r25, 0x86	; 134
 1dc:	86 2f       	mov	r24, r22
 1de:	70 e0       	ldi	r23, 0x00	; 0
 1e0:	60 e0       	ldi	r22, 0x00	; 0
 1e2:	2a f0       	brmi	.+10     	; 0x1ee <__floatsisf+0x6c>
 1e4:	9a 95       	dec	r25
 1e6:	66 0f       	add	r22, r22
 1e8:	77 1f       	adc	r23, r23
 1ea:	88 1f       	adc	r24, r24
 1ec:	da f7       	brpl	.-10     	; 0x1e4 <__floatsisf+0x62>
 1ee:	88 0f       	add	r24, r24
 1f0:	96 95       	lsr	r25
 1f2:	87 95       	ror	r24
 1f4:	97 f9       	bld	r25, 7
 1f6:	08 95       	ret

000001f8 <__gesf2>:
 1f8:	66 d0       	rcall	.+204    	; 0x2c6 <__fp_cmp>
 1fa:	08 f4       	brcc	.+2      	; 0x1fe <__gesf2+0x6>
 1fc:	8f ef       	ldi	r24, 0xFF	; 255
 1fe:	08 95       	ret

00000200 <__mulsf3>:
 200:	0b d0       	rcall	.+22     	; 0x218 <__mulsf3x>
 202:	9c c0       	rjmp	.+312    	; 0x33c <__fp_round>
 204:	8d d0       	rcall	.+282    	; 0x320 <__fp_pscA>
 206:	28 f0       	brcs	.+10     	; 0x212 <__mulsf3+0x12>
 208:	92 d0       	rcall	.+292    	; 0x32e <__fp_pscB>
 20a:	18 f0       	brcs	.+6      	; 0x212 <__mulsf3+0x12>
 20c:	95 23       	and	r25, r21
 20e:	09 f0       	breq	.+2      	; 0x212 <__mulsf3+0x12>
 210:	7e c0       	rjmp	.+252    	; 0x30e <__fp_inf>
 212:	83 c0       	rjmp	.+262    	; 0x31a <__fp_nan>
 214:	11 24       	eor	r1, r1
 216:	c6 c0       	rjmp	.+396    	; 0x3a4 <__fp_szero>

00000218 <__mulsf3x>:
 218:	a2 d0       	rcall	.+324    	; 0x35e <__fp_split3>
 21a:	a0 f3       	brcs	.-24     	; 0x204 <__mulsf3+0x4>

0000021c <__mulsf3_pse>:
 21c:	95 9f       	mul	r25, r21
 21e:	d1 f3       	breq	.-12     	; 0x214 <__mulsf3+0x14>
 220:	95 0f       	add	r25, r21
 222:	50 e0       	ldi	r21, 0x00	; 0
 224:	55 1f       	adc	r21, r21
 226:	62 9f       	mul	r22, r18
 228:	f0 01       	movw	r30, r0
 22a:	72 9f       	mul	r23, r18
 22c:	bb 27       	eor	r27, r27
 22e:	f0 0d       	add	r31, r0
 230:	b1 1d       	adc	r27, r1
 232:	63 9f       	mul	r22, r19
 234:	aa 27       	eor	r26, r26
 236:	f0 0d       	add	r31, r0
 238:	b1 1d       	adc	r27, r1
 23a:	aa 1f       	adc	r26, r26
 23c:	64 9f       	mul	r22, r20
 23e:	66 27       	eor	r22, r22
 240:	b0 0d       	add	r27, r0
 242:	a1 1d       	adc	r26, r1
 244:	66 1f       	adc	r22, r22
 246:	82 9f       	mul	r24, r18
 248:	22 27       	eor	r18, r18
 24a:	b0 0d       	add	r27, r0
 24c:	a1 1d       	adc	r26, r1
 24e:	62 1f       	adc	r22, r18
 250:	73 9f       	mul	r23, r19
 252:	b0 0d       	add	r27, r0
 254:	a1 1d       	adc	r26, r1
 256:	62 1f       	adc	r22, r18
 258:	83 9f       	mul	r24, r19
 25a:	a0 0d       	add	r26, r0
 25c:	61 1d       	adc	r22, r1
 25e:	22 1f       	adc	r18, r18
 260:	74 9f       	mul	r23, r20
 262:	33 27       	eor	r19, r19
 264:	a0 0d       	add	r26, r0
 266:	61 1d       	adc	r22, r1
 268:	23 1f       	adc	r18, r19
 26a:	84 9f       	mul	r24, r20
 26c:	60 0d       	add	r22, r0
 26e:	21 1d       	adc	r18, r1
 270:	82 2f       	mov	r24, r18
 272:	76 2f       	mov	r23, r22
 274:	6a 2f       	mov	r22, r26
 276:	11 24       	eor	r1, r1
 278:	9f 57       	subi	r25, 0x7F	; 127
 27a:	50 40       	sbci	r21, 0x00	; 0
 27c:	8a f0       	brmi	.+34     	; 0x2a0 <__mulsf3_pse+0x84>
 27e:	e1 f0       	breq	.+56     	; 0x2b8 <__mulsf3_pse+0x9c>
 280:	88 23       	and	r24, r24
 282:	4a f0       	brmi	.+18     	; 0x296 <__mulsf3_pse+0x7a>
 284:	ee 0f       	add	r30, r30
 286:	ff 1f       	adc	r31, r31
 288:	bb 1f       	adc	r27, r27
 28a:	66 1f       	adc	r22, r22
 28c:	77 1f       	adc	r23, r23
 28e:	88 1f       	adc	r24, r24
 290:	91 50       	subi	r25, 0x01	; 1
 292:	50 40       	sbci	r21, 0x00	; 0
 294:	a9 f7       	brne	.-22     	; 0x280 <__mulsf3_pse+0x64>
 296:	9e 3f       	cpi	r25, 0xFE	; 254
 298:	51 05       	cpc	r21, r1
 29a:	70 f0       	brcs	.+28     	; 0x2b8 <__mulsf3_pse+0x9c>
 29c:	38 c0       	rjmp	.+112    	; 0x30e <__fp_inf>
 29e:	82 c0       	rjmp	.+260    	; 0x3a4 <__fp_szero>
 2a0:	5f 3f       	cpi	r21, 0xFF	; 255
 2a2:	ec f3       	brlt	.-6      	; 0x29e <__mulsf3_pse+0x82>
 2a4:	98 3e       	cpi	r25, 0xE8	; 232
 2a6:	dc f3       	brlt	.-10     	; 0x29e <__mulsf3_pse+0x82>
 2a8:	86 95       	lsr	r24
 2aa:	77 95       	ror	r23
 2ac:	67 95       	ror	r22
 2ae:	b7 95       	ror	r27
 2b0:	f7 95       	ror	r31
 2b2:	e7 95       	ror	r30
 2b4:	9f 5f       	subi	r25, 0xFF	; 255
 2b6:	c1 f7       	brne	.-16     	; 0x2a8 <__mulsf3_pse+0x8c>
 2b8:	fe 2b       	or	r31, r30
 2ba:	88 0f       	add	r24, r24
 2bc:	91 1d       	adc	r25, r1
 2be:	96 95       	lsr	r25
 2c0:	87 95       	ror	r24
 2c2:	97 f9       	bld	r25, 7
 2c4:	08 95       	ret

000002c6 <__fp_cmp>:
 2c6:	99 0f       	add	r25, r25
 2c8:	00 08       	sbc	r0, r0
 2ca:	55 0f       	add	r21, r21
 2cc:	aa 0b       	sbc	r26, r26
 2ce:	e0 e8       	ldi	r30, 0x80	; 128
 2d0:	fe ef       	ldi	r31, 0xFE	; 254
 2d2:	16 16       	cp	r1, r22
 2d4:	17 06       	cpc	r1, r23
 2d6:	e8 07       	cpc	r30, r24
 2d8:	f9 07       	cpc	r31, r25
 2da:	c0 f0       	brcs	.+48     	; 0x30c <__fp_cmp+0x46>
 2dc:	12 16       	cp	r1, r18
 2de:	13 06       	cpc	r1, r19
 2e0:	e4 07       	cpc	r30, r20
 2e2:	f5 07       	cpc	r31, r21
 2e4:	98 f0       	brcs	.+38     	; 0x30c <__fp_cmp+0x46>
 2e6:	62 1b       	sub	r22, r18
 2e8:	73 0b       	sbc	r23, r19
 2ea:	84 0b       	sbc	r24, r20
 2ec:	95 0b       	sbc	r25, r21
 2ee:	39 f4       	brne	.+14     	; 0x2fe <__fp_cmp+0x38>
 2f0:	0a 26       	eor	r0, r26
 2f2:	61 f0       	breq	.+24     	; 0x30c <__fp_cmp+0x46>
 2f4:	23 2b       	or	r18, r19
 2f6:	24 2b       	or	r18, r20
 2f8:	25 2b       	or	r18, r21
 2fa:	21 f4       	brne	.+8      	; 0x304 <__fp_cmp+0x3e>
 2fc:	08 95       	ret
 2fe:	0a 26       	eor	r0, r26
 300:	09 f4       	brne	.+2      	; 0x304 <__fp_cmp+0x3e>
 302:	a1 40       	sbci	r26, 0x01	; 1
 304:	a6 95       	lsr	r26
 306:	8f ef       	ldi	r24, 0xFF	; 255
 308:	81 1d       	adc	r24, r1
 30a:	81 1d       	adc	r24, r1
 30c:	08 95       	ret

0000030e <__fp_inf>:
 30e:	97 f9       	bld	r25, 7
 310:	9f 67       	ori	r25, 0x7F	; 127
 312:	80 e8       	ldi	r24, 0x80	; 128
 314:	70 e0       	ldi	r23, 0x00	; 0
 316:	60 e0       	ldi	r22, 0x00	; 0
 318:	08 95       	ret

0000031a <__fp_nan>:
 31a:	9f ef       	ldi	r25, 0xFF	; 255
 31c:	80 ec       	ldi	r24, 0xC0	; 192
 31e:	08 95       	ret

00000320 <__fp_pscA>:
 320:	00 24       	eor	r0, r0
 322:	0a 94       	dec	r0
 324:	16 16       	cp	r1, r22
 326:	17 06       	cpc	r1, r23
 328:	18 06       	cpc	r1, r24
 32a:	09 06       	cpc	r0, r25
 32c:	08 95       	ret

0000032e <__fp_pscB>:
 32e:	00 24       	eor	r0, r0
 330:	0a 94       	dec	r0
 332:	12 16       	cp	r1, r18
 334:	13 06       	cpc	r1, r19
 336:	14 06       	cpc	r1, r20
 338:	05 06       	cpc	r0, r21
 33a:	08 95       	ret

0000033c <__fp_round>:
 33c:	09 2e       	mov	r0, r25
 33e:	03 94       	inc	r0
 340:	00 0c       	add	r0, r0
 342:	11 f4       	brne	.+4      	; 0x348 <__fp_round+0xc>
 344:	88 23       	and	r24, r24
 346:	52 f0       	brmi	.+20     	; 0x35c <__fp_round+0x20>
 348:	bb 0f       	add	r27, r27
 34a:	40 f4       	brcc	.+16     	; 0x35c <__fp_round+0x20>
 34c:	bf 2b       	or	r27, r31
 34e:	11 f4       	brne	.+4      	; 0x354 <__fp_round+0x18>
 350:	60 ff       	sbrs	r22, 0
 352:	04 c0       	rjmp	.+8      	; 0x35c <__fp_round+0x20>
 354:	6f 5f       	subi	r22, 0xFF	; 255
 356:	7f 4f       	sbci	r23, 0xFF	; 255
 358:	8f 4f       	sbci	r24, 0xFF	; 255
 35a:	9f 4f       	sbci	r25, 0xFF	; 255
 35c:	08 95       	ret

0000035e <__fp_split3>:
 35e:	57 fd       	sbrc	r21, 7
 360:	90 58       	subi	r25, 0x80	; 128
 362:	44 0f       	add	r20, r20
 364:	55 1f       	adc	r21, r21
 366:	59 f0       	breq	.+22     	; 0x37e <__fp_splitA+0x10>
 368:	5f 3f       	cpi	r21, 0xFF	; 255
 36a:	71 f0       	breq	.+28     	; 0x388 <__fp_splitA+0x1a>
 36c:	47 95       	ror	r20

0000036e <__fp_splitA>:
 36e:	88 0f       	add	r24, r24
 370:	97 fb       	bst	r25, 7
 372:	99 1f       	adc	r25, r25
 374:	61 f0       	breq	.+24     	; 0x38e <__fp_splitA+0x20>
 376:	9f 3f       	cpi	r25, 0xFF	; 255
 378:	79 f0       	breq	.+30     	; 0x398 <__fp_splitA+0x2a>
 37a:	87 95       	ror	r24
 37c:	08 95       	ret
 37e:	12 16       	cp	r1, r18
 380:	13 06       	cpc	r1, r19
 382:	14 06       	cpc	r1, r20
 384:	55 1f       	adc	r21, r21
 386:	f2 cf       	rjmp	.-28     	; 0x36c <__fp_split3+0xe>
 388:	46 95       	lsr	r20
 38a:	f1 df       	rcall	.-30     	; 0x36e <__fp_splitA>
 38c:	08 c0       	rjmp	.+16     	; 0x39e <__fp_splitA+0x30>
 38e:	16 16       	cp	r1, r22
 390:	17 06       	cpc	r1, r23
 392:	18 06       	cpc	r1, r24
 394:	99 1f       	adc	r25, r25
 396:	f1 cf       	rjmp	.-30     	; 0x37a <__fp_splitA+0xc>
 398:	86 95       	lsr	r24
 39a:	71 05       	cpc	r23, r1
 39c:	61 05       	cpc	r22, r1
 39e:	08 94       	sec
 3a0:	08 95       	ret

000003a2 <__fp_zero>:
 3a2:	e8 94       	clt

000003a4 <__fp_szero>:
 3a4:	bb 27       	eor	r27, r27
 3a6:	66 27       	eor	r22, r22
 3a8:	77 27       	eor	r23, r23
 3aa:	cb 01       	movw	r24, r22
 3ac:	97 f9       	bld	r25, 7
 3ae:	08 95       	ret

000003b0 <_exit>:
 3b0:	f8 94       	cli

000003b2 <__stop_program>:
 3b2:	ff cf       	rjmp	.-2      	; 0x3b2 <__stop_program>
