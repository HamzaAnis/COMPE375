
Lab1 Morse Code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000226  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001d2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000226  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000258  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000298  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000483  00000000  00000000  000002b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000d6  00000000  00000000  0000073b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000067f  00000000  00000000  00000811  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000e90  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000ffab  00000000  00000000  00000eb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00010e5f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  000005d6  00000000  00000000  00010e6f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	39 c0       	rjmp	.+114    	; 0x78 <__bad_interrupt>
   6:	00 00       	nop
   8:	37 c0       	rjmp	.+110    	; 0x78 <__bad_interrupt>
   a:	00 00       	nop
   c:	35 c0       	rjmp	.+106    	; 0x78 <__bad_interrupt>
   e:	00 00       	nop
  10:	33 c0       	rjmp	.+102    	; 0x78 <__bad_interrupt>
  12:	00 00       	nop
  14:	31 c0       	rjmp	.+98     	; 0x78 <__bad_interrupt>
  16:	00 00       	nop
  18:	2f c0       	rjmp	.+94     	; 0x78 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	2d c0       	rjmp	.+90     	; 0x78 <__bad_interrupt>
  1e:	00 00       	nop
  20:	2b c0       	rjmp	.+86     	; 0x78 <__bad_interrupt>
  22:	00 00       	nop
  24:	29 c0       	rjmp	.+82     	; 0x78 <__bad_interrupt>
  26:	00 00       	nop
  28:	27 c0       	rjmp	.+78     	; 0x78 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	25 c0       	rjmp	.+74     	; 0x78 <__bad_interrupt>
  2e:	00 00       	nop
  30:	23 c0       	rjmp	.+70     	; 0x78 <__bad_interrupt>
  32:	00 00       	nop
  34:	21 c0       	rjmp	.+66     	; 0x78 <__bad_interrupt>
  36:	00 00       	nop
  38:	1f c0       	rjmp	.+62     	; 0x78 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	1d c0       	rjmp	.+58     	; 0x78 <__bad_interrupt>
  3e:	00 00       	nop
  40:	1b c0       	rjmp	.+54     	; 0x78 <__bad_interrupt>
  42:	00 00       	nop
  44:	19 c0       	rjmp	.+50     	; 0x78 <__bad_interrupt>
  46:	00 00       	nop
  48:	17 c0       	rjmp	.+46     	; 0x78 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	15 c0       	rjmp	.+42     	; 0x78 <__bad_interrupt>
  4e:	00 00       	nop
  50:	13 c0       	rjmp	.+38     	; 0x78 <__bad_interrupt>
  52:	00 00       	nop
  54:	11 c0       	rjmp	.+34     	; 0x78 <__bad_interrupt>
  56:	00 00       	nop
  58:	0f c0       	rjmp	.+30     	; 0x78 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	0d c0       	rjmp	.+26     	; 0x78 <__bad_interrupt>
  5e:	00 00       	nop
  60:	0b c0       	rjmp	.+22     	; 0x78 <__bad_interrupt>
  62:	00 00       	nop
  64:	09 c0       	rjmp	.+18     	; 0x78 <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	02 d0       	rcall	.+4      	; 0x7a <main>
  76:	ab c0       	rjmp	.+342    	; 0x1ce <_exit>

00000078 <__bad_interrupt>:
  78:	c3 cf       	rjmp	.-122    	; 0x0 <__vectors>

0000007a <main>:
#include <avr/io.h>
#include <util/delay.h>
int main(void)
{
	//LED 0 on the board is connected to AVR port pin B5 (pin #17 on the 328P)
	DDRB |= (1<<DDB5); // Set port bit B5 in data direction register to 1: an OUTput
  7a:	25 9a       	sbi	0x04, 5	; 4
	while(1)
	{	//B
		PORTB |= (1<<PORTB5); //Dash
  7c:	2d 9a       	sbi	0x05, 5	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  7e:	2f ef       	ldi	r18, 0xFF	; 255
  80:	8b e4       	ldi	r24, 0x4B	; 75
  82:	9d e1       	ldi	r25, 0x1D	; 29
  84:	21 50       	subi	r18, 0x01	; 1
  86:	80 40       	sbci	r24, 0x00	; 0
  88:	90 40       	sbci	r25, 0x00	; 0
  8a:	e1 f7       	brne	.-8      	; 0x84 <main+0xa>
  8c:	00 c0       	rjmp	.+0      	; 0x8e <main+0x14>
  8e:	00 00       	nop
		_delay_ms(600); 
		PORTB &= (0<<PORTB5); //Off
  90:	85 b1       	in	r24, 0x05	; 5
  92:	15 b8       	out	0x05, r1	; 5
  94:	2f ef       	ldi	r18, 0xFF	; 255
  96:	81 ee       	ldi	r24, 0xE1	; 225
  98:	94 e0       	ldi	r25, 0x04	; 4
  9a:	21 50       	subi	r18, 0x01	; 1
  9c:	80 40       	sbci	r24, 0x00	; 0
  9e:	90 40       	sbci	r25, 0x00	; 0
  a0:	e1 f7       	brne	.-8      	; 0x9a <main+0x20>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <main+0x2a>
  a4:	00 00       	nop
		_delay_ms(100);
		PORTB |= (1<<PORTB5); //Dot
  a6:	2d 9a       	sbi	0x05, 5	; 5
  a8:	2f ef       	ldi	r18, 0xFF	; 255
  aa:	83 ec       	ldi	r24, 0xC3	; 195
  ac:	99 e0       	ldi	r25, 0x09	; 9
  ae:	21 50       	subi	r18, 0x01	; 1
  b0:	80 40       	sbci	r24, 0x00	; 0
  b2:	90 40       	sbci	r25, 0x00	; 0
  b4:	e1 f7       	brne	.-8      	; 0xae <main+0x34>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <main+0x3e>
  b8:	00 00       	nop
		_delay_ms(200); 
		PORTB &= (0<<PORTB5); //Off
  ba:	85 b1       	in	r24, 0x05	; 5
  bc:	15 b8       	out	0x05, r1	; 5
  be:	2f ef       	ldi	r18, 0xFF	; 255
  c0:	81 ee       	ldi	r24, 0xE1	; 225
  c2:	94 e0       	ldi	r25, 0x04	; 4
  c4:	21 50       	subi	r18, 0x01	; 1
  c6:	80 40       	sbci	r24, 0x00	; 0
  c8:	90 40       	sbci	r25, 0x00	; 0
  ca:	e1 f7       	brne	.-8      	; 0xc4 <main+0x4a>
  cc:	00 c0       	rjmp	.+0      	; 0xce <main+0x54>
  ce:	00 00       	nop
		_delay_ms(100);
		PORTB |= (1<<PORTB5); //Dot
  d0:	2d 9a       	sbi	0x05, 5	; 5
  d2:	2f ef       	ldi	r18, 0xFF	; 255
  d4:	83 ec       	ldi	r24, 0xC3	; 195
  d6:	99 e0       	ldi	r25, 0x09	; 9
  d8:	21 50       	subi	r18, 0x01	; 1
  da:	80 40       	sbci	r24, 0x00	; 0
  dc:	90 40       	sbci	r25, 0x00	; 0
  de:	e1 f7       	brne	.-8      	; 0xd8 <main+0x5e>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <main+0x68>
  e2:	00 00       	nop
		_delay_ms(200);
		PORTB &= (0<<PORTB5); //Off
  e4:	85 b1       	in	r24, 0x05	; 5
  e6:	15 b8       	out	0x05, r1	; 5
  e8:	2f ef       	ldi	r18, 0xFF	; 255
  ea:	81 ee       	ldi	r24, 0xE1	; 225
  ec:	94 e0       	ldi	r25, 0x04	; 4
  ee:	21 50       	subi	r18, 0x01	; 1
  f0:	80 40       	sbci	r24, 0x00	; 0
  f2:	90 40       	sbci	r25, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x74>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x7e>
  f8:	00 00       	nop
		_delay_ms(100);
		PORTB |= (1<<PORTB5); // Dot
  fa:	2d 9a       	sbi	0x05, 5	; 5
  fc:	2f ef       	ldi	r18, 0xFF	; 255
  fe:	83 ec       	ldi	r24, 0xC3	; 195
 100:	99 e0       	ldi	r25, 0x09	; 9
 102:	21 50       	subi	r18, 0x01	; 1
 104:	80 40       	sbci	r24, 0x00	; 0
 106:	90 40       	sbci	r25, 0x00	; 0
 108:	e1 f7       	brne	.-8      	; 0x102 <main+0x88>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <main+0x92>
 10c:	00 00       	nop
		_delay_ms(200); 
		PORTB &= (0<<PORTB5); // Off
 10e:	85 b1       	in	r24, 0x05	; 5
 110:	15 b8       	out	0x05, r1	; 5
 112:	2f ef       	ldi	r18, 0xFF	; 255
 114:	81 ee       	ldi	r24, 0xE1	; 225
 116:	94 e0       	ldi	r25, 0x04	; 4
 118:	21 50       	subi	r18, 0x01	; 1
 11a:	80 40       	sbci	r24, 0x00	; 0
 11c:	90 40       	sbci	r25, 0x00	; 0
 11e:	e1 f7       	brne	.-8      	; 0x118 <main+0x9e>
 120:	00 c0       	rjmp	.+0      	; 0x122 <main+0xa8>
 122:	00 00       	nop
		_delay_ms(100);

		//V
		PORTB |= (1<<PORTB5); //Dot
 124:	2d 9a       	sbi	0x05, 5	; 5
 126:	2f ef       	ldi	r18, 0xFF	; 255
 128:	83 ec       	ldi	r24, 0xC3	; 195
 12a:	99 e0       	ldi	r25, 0x09	; 9
 12c:	21 50       	subi	r18, 0x01	; 1
 12e:	80 40       	sbci	r24, 0x00	; 0
 130:	90 40       	sbci	r25, 0x00	; 0
 132:	e1 f7       	brne	.-8      	; 0x12c <main+0xb2>
 134:	00 c0       	rjmp	.+0      	; 0x136 <main+0xbc>
 136:	00 00       	nop
		_delay_ms(200);
		PORTB &= (0<<PORTB5); //Off
 138:	85 b1       	in	r24, 0x05	; 5
 13a:	15 b8       	out	0x05, r1	; 5
 13c:	2f ef       	ldi	r18, 0xFF	; 255
 13e:	81 ee       	ldi	r24, 0xE1	; 225
 140:	94 e0       	ldi	r25, 0x04	; 4
 142:	21 50       	subi	r18, 0x01	; 1
 144:	80 40       	sbci	r24, 0x00	; 0
 146:	90 40       	sbci	r25, 0x00	; 0
 148:	e1 f7       	brne	.-8      	; 0x142 <main+0xc8>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <main+0xd2>
 14c:	00 00       	nop
		_delay_ms(100);
		PORTB |= (1<<PORTB5); //Dot
 14e:	2d 9a       	sbi	0x05, 5	; 5
 150:	2f ef       	ldi	r18, 0xFF	; 255
 152:	83 ec       	ldi	r24, 0xC3	; 195
 154:	99 e0       	ldi	r25, 0x09	; 9
 156:	21 50       	subi	r18, 0x01	; 1
 158:	80 40       	sbci	r24, 0x00	; 0
 15a:	90 40       	sbci	r25, 0x00	; 0
 15c:	e1 f7       	brne	.-8      	; 0x156 <main+0xdc>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <main+0xe6>
 160:	00 00       	nop
		_delay_ms(200);
		PORTB &= (0<<PORTB5); //Off
 162:	85 b1       	in	r24, 0x05	; 5
 164:	15 b8       	out	0x05, r1	; 5
 166:	2f ef       	ldi	r18, 0xFF	; 255
 168:	81 ee       	ldi	r24, 0xE1	; 225
 16a:	94 e0       	ldi	r25, 0x04	; 4
 16c:	21 50       	subi	r18, 0x01	; 1
 16e:	80 40       	sbci	r24, 0x00	; 0
 170:	90 40       	sbci	r25, 0x00	; 0
 172:	e1 f7       	brne	.-8      	; 0x16c <main+0xf2>
 174:	00 c0       	rjmp	.+0      	; 0x176 <main+0xfc>
 176:	00 00       	nop
		_delay_ms(100);
		PORTB |= (1<<PORTB5); // Dot
 178:	2d 9a       	sbi	0x05, 5	; 5
 17a:	2f ef       	ldi	r18, 0xFF	; 255
 17c:	83 ec       	ldi	r24, 0xC3	; 195
 17e:	99 e0       	ldi	r25, 0x09	; 9
 180:	21 50       	subi	r18, 0x01	; 1
 182:	80 40       	sbci	r24, 0x00	; 0
 184:	90 40       	sbci	r25, 0x00	; 0
 186:	e1 f7       	brne	.-8      	; 0x180 <main+0x106>
 188:	00 c0       	rjmp	.+0      	; 0x18a <main+0x110>
 18a:	00 00       	nop
		_delay_ms(200);
		PORTB &= (0<<PORTB5); // Off
 18c:	85 b1       	in	r24, 0x05	; 5
 18e:	15 b8       	out	0x05, r1	; 5
 190:	2f ef       	ldi	r18, 0xFF	; 255
 192:	81 ee       	ldi	r24, 0xE1	; 225
 194:	94 e0       	ldi	r25, 0x04	; 4
 196:	21 50       	subi	r18, 0x01	; 1
 198:	80 40       	sbci	r24, 0x00	; 0
 19a:	90 40       	sbci	r25, 0x00	; 0
 19c:	e1 f7       	brne	.-8      	; 0x196 <main+0x11c>
 19e:	00 c0       	rjmp	.+0      	; 0x1a0 <main+0x126>
 1a0:	00 00       	nop
		_delay_ms(100);
		PORTB |= (1<<PORTB5); //Dash
 1a2:	2d 9a       	sbi	0x05, 5	; 5
 1a4:	2f ef       	ldi	r18, 0xFF	; 255
 1a6:	8b e4       	ldi	r24, 0x4B	; 75
 1a8:	9d e1       	ldi	r25, 0x1D	; 29
 1aa:	21 50       	subi	r18, 0x01	; 1
 1ac:	80 40       	sbci	r24, 0x00	; 0
 1ae:	90 40       	sbci	r25, 0x00	; 0
 1b0:	e1 f7       	brne	.-8      	; 0x1aa <main+0x130>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <main+0x13a>
 1b4:	00 00       	nop
		_delay_ms(600);
		PORTB &= (0<<PORTB5); //Off
 1b6:	85 b1       	in	r24, 0x05	; 5
 1b8:	15 b8       	out	0x05, r1	; 5
 1ba:	2f ef       	ldi	r18, 0xFF	; 255
 1bc:	83 ed       	ldi	r24, 0xD3	; 211
 1be:	90 e3       	ldi	r25, 0x30	; 48
 1c0:	21 50       	subi	r18, 0x01	; 1
 1c2:	80 40       	sbci	r24, 0x00	; 0
 1c4:	90 40       	sbci	r25, 0x00	; 0
 1c6:	e1 f7       	brne	.-8      	; 0x1c0 <main+0x146>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <main+0x150>
 1ca:	00 00       	nop
 1cc:	57 cf       	rjmp	.-338    	; 0x7c <main+0x2>

000001ce <_exit>:
 1ce:	f8 94       	cli

000001d0 <__stop_program>:
 1d0:	ff cf       	rjmp	.-2      	; 0x1d0 <__stop_program>
