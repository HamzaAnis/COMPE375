
Lab6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000035c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000003b0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000420  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000842  00000000  00000000  00000448  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000102  00000000  00000000  00000c8a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000875  00000000  00000000  00000d8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000050  00000000  00000000  00001604  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000ffea  00000000  00000000  00001654  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000067e  00000000  00000000  0001163e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00011cbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00000648  00000000  00000000  00011cec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	39 c0       	rjmp	.+114    	; 0x78 <__bad_interrupt>
   6:	00 00       	nop
   8:	37 c0       	rjmp	.+110    	; 0x78 <__bad_interrupt>
   a:	00 00       	nop
   c:	35 c0       	rjmp	.+106    	; 0x78 <__bad_interrupt>
   e:	00 00       	nop
  10:	33 c0       	rjmp	.+102    	; 0x78 <__bad_interrupt>
  12:	00 00       	nop
  14:	31 c0       	rjmp	.+98     	; 0x78 <__bad_interrupt>
  16:	00 00       	nop
  18:	2f c0       	rjmp	.+94     	; 0x78 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	2d c0       	rjmp	.+90     	; 0x78 <__bad_interrupt>
  1e:	00 00       	nop
  20:	2b c0       	rjmp	.+86     	; 0x78 <__bad_interrupt>
  22:	00 00       	nop
  24:	29 c0       	rjmp	.+82     	; 0x78 <__bad_interrupt>
  26:	00 00       	nop
  28:	27 c0       	rjmp	.+78     	; 0x78 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	25 c0       	rjmp	.+74     	; 0x78 <__bad_interrupt>
  2e:	00 00       	nop
  30:	23 c0       	rjmp	.+70     	; 0x78 <__bad_interrupt>
  32:	00 00       	nop
  34:	21 c0       	rjmp	.+66     	; 0x78 <__bad_interrupt>
  36:	00 00       	nop
  38:	1f c0       	rjmp	.+62     	; 0x78 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	1d c0       	rjmp	.+58     	; 0x78 <__bad_interrupt>
  3e:	00 00       	nop
  40:	1b c0       	rjmp	.+54     	; 0x78 <__bad_interrupt>
  42:	00 00       	nop
  44:	19 c0       	rjmp	.+50     	; 0x78 <__bad_interrupt>
  46:	00 00       	nop
  48:	17 c0       	rjmp	.+46     	; 0x78 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	15 c0       	rjmp	.+42     	; 0x78 <__bad_interrupt>
  4e:	00 00       	nop
  50:	13 c0       	rjmp	.+38     	; 0x78 <__bad_interrupt>
  52:	00 00       	nop
  54:	11 c0       	rjmp	.+34     	; 0x78 <__bad_interrupt>
  56:	00 00       	nop
  58:	0f c0       	rjmp	.+30     	; 0x78 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	0d c0       	rjmp	.+26     	; 0x78 <__bad_interrupt>
  5e:	00 00       	nop
  60:	0b c0       	rjmp	.+22     	; 0x78 <__bad_interrupt>
  62:	00 00       	nop
  64:	09 c0       	rjmp	.+18     	; 0x78 <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	63 d1       	rcall	.+710    	; 0x33c <main>
  76:	70 c1       	rjmp	.+736    	; 0x358 <_exit>

00000078 <__bad_interrupt>:
  78:	c3 cf       	rjmp	.-122    	; 0x0 <__vectors>

0000007a <scan_keypad>:
	}

}

void scan_keypad()
{
  7a:	ff 92       	push	r15
  7c:	0f 93       	push	r16
  7e:	1f 93       	push	r17
  80:	cf 93       	push	r28
  82:	df 93       	push	r29
	for (int col = 4; col < 8; col++)
  84:	64 e0       	ldi	r22, 0x04	; 4
  86:	70 e0       	ldi	r23, 0x00	; 0
	{
		PORTD |= 0xFF;		//reset
  88:	ff 24       	eor	r15, r15
  8a:	fa 94       	dec	r15
		PORTD &= ~(1<<col);		//sets specific PORTD/PIN(col) to 0 and everything else 1.
  8c:	c1 e0       	ldi	r28, 0x01	; 1
  8e:	d0 e0       	ldi	r29, 0x00	; 0
  90:	00 e0       	ldi	r16, 0x00	; 0
  92:	10 e0       	ldi	r17, 0x00	; 0

void scan_keypad()
{
	for (int col = 4; col < 8; col++)
	{
		PORTD |= 0xFF;		//reset
  94:	8b b1       	in	r24, 0x0b	; 11
  96:	fb b8       	out	0x0b, r15	; 11
		PORTD &= ~(1<<col);		//sets specific PORTD/PIN(col) to 0 and everything else 1.
  98:	8b b1       	in	r24, 0x0b	; 11
  9a:	de 01       	movw	r26, r28
  9c:	06 2e       	mov	r0, r22
  9e:	02 c0       	rjmp	.+4      	; 0xa4 <scan_keypad+0x2a>
  a0:	aa 0f       	add	r26, r26
  a2:	bb 1f       	adc	r27, r27
  a4:	0a 94       	dec	r0
  a6:	e2 f7       	brpl	.-8      	; 0xa0 <scan_keypad+0x26>
  a8:	9a 2f       	mov	r25, r26
  aa:	90 95       	com	r25
  ac:	89 23       	and	r24, r25
  ae:	8b b9       	out	0x0b, r24	; 11
  b0:	ae 01       	movw	r20, r28
  b2:	20 2f       	mov	r18, r16
  b4:	31 2f       	mov	r19, r17
  b6:	04 c0       	rjmp	.+8      	; 0xc0 <scan_keypad+0x46>
  b8:	2f 5f       	subi	r18, 0xFF	; 255
  ba:	3f 4f       	sbci	r19, 0xFF	; 255
  bc:	4f 5f       	subi	r20, 0xFF	; 255
  be:	5f 4f       	sbci	r21, 0xFF	; 255
  c0:	f9 01       	movw	r30, r18
		for (int row = 0; row < 4; row++)
		{
			PORTB |= 0x0F;		//reset
  c2:	85 b1       	in	r24, 0x05	; 5
  c4:	8f 60       	ori	r24, 0x0F	; 15
  c6:	85 b9       	out	0x05, r24	; 5
			if (!(PINB & (1<<row)) && !(PIND & (1<<col)))	//checks for 0's for the row and col
  c8:	83 b1       	in	r24, 0x03	; 3
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	02 2e       	mov	r0, r18
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <scan_keypad+0x5a>
  d0:	95 95       	asr	r25
  d2:	87 95       	ror	r24
  d4:	0a 94       	dec	r0
  d6:	e2 f7       	brpl	.-8      	; 0xd0 <scan_keypad+0x56>
  d8:	80 fd       	sbrc	r24, 0
  da:	1b c1       	rjmp	.+566    	; 0x312 <scan_keypad+0x298>
  dc:	89 b1       	in	r24, 0x09	; 9
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	8a 23       	and	r24, r26
  e2:	9b 23       	and	r25, r27
  e4:	89 2b       	or	r24, r25
  e6:	09 f0       	breq	.+2      	; 0xea <scan_keypad+0x70>
  e8:	14 c1       	rjmp	.+552    	; 0x312 <scan_keypad+0x298>
			{
				if (col == 4 && row == 0)	//Middle C
  ea:	64 30       	cpi	r22, 0x04	; 4
  ec:	71 05       	cpc	r23, r1
  ee:	f1 f5       	brne	.+124    	; 0x16c <scan_keypad+0xf2>
  f0:	ef 2b       	or	r30, r31
  f2:	69 f4       	brne	.+26     	; 0x10e <scan_keypad+0x94>
				{
					NOTE_ON;
  f4:	2d 9a       	sbi	0x05, 5	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f6:	8b e6       	ldi	r24, 0x6B	; 107
  f8:	97 e1       	ldi	r25, 0x17	; 23
  fa:	01 97       	sbiw	r24, 0x01	; 1
  fc:	f1 f7       	brne	.-4      	; 0xfa <scan_keypad+0x80>
  fe:	00 00       	nop
					_delay_us(23982);
					NOTE_OFF;
 100:	2d 98       	cbi	0x05, 5	; 5
 102:	8b e6       	ldi	r24, 0x6B	; 107
 104:	97 e1       	ldi	r25, 0x17	; 23
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <scan_keypad+0x8c>
 10a:	00 00       	nop
 10c:	d5 cf       	rjmp	.-86     	; 0xb8 <scan_keypad+0x3e>
					_delay_us(23982);
				}
				else if (col == 4 && row == 1)	//C# Db
 10e:	21 30       	cpi	r18, 0x01	; 1
 110:	31 05       	cpc	r19, r1
 112:	59 f4       	brne	.+22     	; 0x12a <scan_keypad+0xb0>
				{
					NOTE_ON;
 114:	2d 9a       	sbi	0x05, 5	; 5
 116:	8b e1       	ldi	r24, 0x1B	; 27
 118:	96 e1       	ldi	r25, 0x16	; 22
 11a:	01 97       	sbiw	r24, 0x01	; 1
 11c:	f1 f7       	brne	.-4      	; 0x11a <scan_keypad+0xa0>
					_delay_us(22637);
					NOTE_OFF;
 11e:	2d 98       	cbi	0x05, 5	; 5
 120:	8b e1       	ldi	r24, 0x1B	; 27
 122:	96 e1       	ldi	r25, 0x16	; 22
 124:	01 97       	sbiw	r24, 0x01	; 1
 126:	f1 f7       	brne	.-4      	; 0x124 <scan_keypad+0xaa>
 128:	c7 cf       	rjmp	.-114    	; 0xb8 <scan_keypad+0x3e>
					_delay_us(22637);
				}
				else if (col == 4 && row == 2)	//D
 12a:	22 30       	cpi	r18, 0x02	; 2
 12c:	31 05       	cpc	r19, r1
 12e:	69 f4       	brne	.+26     	; 0x14a <scan_keypad+0xd0>
				{
					NOTE_ON;
 130:	2d 9a       	sbi	0x05, 5	; 5
 132:	8d ed       	ldi	r24, 0xDD	; 221
 134:	94 e1       	ldi	r25, 0x14	; 20
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <scan_keypad+0xbc>
 13a:	00 00       	nop
					_delay_us(21366);
					NOTE_OFF;
 13c:	2d 98       	cbi	0x05, 5	; 5
 13e:	8d ed       	ldi	r24, 0xDD	; 221
 140:	94 e1       	ldi	r25, 0x14	; 20
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <scan_keypad+0xc8>
 146:	00 00       	nop
 148:	b7 cf       	rjmp	.-146    	; 0xb8 <scan_keypad+0x3e>
					_delay_us(21366);
				}
				else if (col == 4 && row == 3)	//D# Eb
 14a:	23 30       	cpi	r18, 0x03	; 3
 14c:	31 05       	cpc	r19, r1
 14e:	09 f0       	breq	.+2      	; 0x152 <scan_keypad+0xd8>
 150:	e0 c0       	rjmp	.+448    	; 0x312 <scan_keypad+0x298>
				{
					NOTE_ON;
 152:	2d 9a       	sbi	0x05, 5	; 5
 154:	81 eb       	ldi	r24, 0xB1	; 177
 156:	93 e1       	ldi	r25, 0x13	; 19
 158:	01 97       	sbiw	r24, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <scan_keypad+0xde>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <scan_keypad+0xe4>
					_delay_us(20167);
					NOTE_OFF;
 15e:	2d 98       	cbi	0x05, 5	; 5
 160:	81 eb       	ldi	r24, 0xB1	; 177
 162:	93 e1       	ldi	r25, 0x13	; 19
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <scan_keypad+0xea>
 168:	00 c0       	rjmp	.+0      	; 0x16a <scan_keypad+0xf0>
 16a:	d7 c0       	rjmp	.+430    	; 0x31a <scan_keypad+0x2a0>
					_delay_us(20167);
				}
				else if (col == 5 && row == 0) //E
 16c:	65 30       	cpi	r22, 0x05	; 5
 16e:	71 05       	cpc	r23, r1
 170:	09 f0       	breq	.+2      	; 0x174 <scan_keypad+0xfa>
 172:	40 c0       	rjmp	.+128    	; 0x1f4 <scan_keypad+0x17a>
 174:	ef 2b       	or	r30, r31
 176:	69 f4       	brne	.+26     	; 0x192 <scan_keypad+0x118>
				{
					NOTE_ON;
 178:	2d 9a       	sbi	0x05, 5	; 5
 17a:	86 e9       	ldi	r24, 0x96	; 150
 17c:	92 e1       	ldi	r25, 0x12	; 18
 17e:	01 97       	sbiw	r24, 0x01	; 1
 180:	f1 f7       	brne	.-4      	; 0x17e <scan_keypad+0x104>
 182:	00 c0       	rjmp	.+0      	; 0x184 <scan_keypad+0x10a>
					_delay_us(19035);
					NOTE_OFF;
 184:	2d 98       	cbi	0x05, 5	; 5
 186:	86 e9       	ldi	r24, 0x96	; 150
 188:	92 e1       	ldi	r25, 0x12	; 18
 18a:	01 97       	sbiw	r24, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <scan_keypad+0x110>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <scan_keypad+0x116>
 190:	93 cf       	rjmp	.-218    	; 0xb8 <scan_keypad+0x3e>
					_delay_us(19035);
				}
				else if (col == 5 && row == 1)	//F
 192:	21 30       	cpi	r18, 0x01	; 1
 194:	31 05       	cpc	r19, r1
 196:	69 f4       	brne	.+26     	; 0x1b2 <scan_keypad+0x138>
				{
					NOTE_ON;
 198:	2d 9a       	sbi	0x05, 5	; 5
 19a:	8b e8       	ldi	r24, 0x8B	; 139
 19c:	91 e1       	ldi	r25, 0x11	; 17
 19e:	01 97       	sbiw	r24, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <scan_keypad+0x124>
 1a2:	00 00       	nop
					_delay_us(17966);
					NOTE_OFF;
 1a4:	2d 98       	cbi	0x05, 5	; 5
 1a6:	8b e8       	ldi	r24, 0x8B	; 139
 1a8:	91 e1       	ldi	r25, 0x11	; 17
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <scan_keypad+0x130>
 1ae:	00 00       	nop
 1b0:	83 cf       	rjmp	.-250    	; 0xb8 <scan_keypad+0x3e>
					_delay_us(17966);
				}
				else if (col == 5 && row == 2)	//F# Gb
 1b2:	22 30       	cpi	r18, 0x02	; 2
 1b4:	31 05       	cpc	r19, r1
 1b6:	69 f4       	brne	.+26     	; 0x1d2 <scan_keypad+0x158>
				{
					NOTE_ON;
 1b8:	2d 9a       	sbi	0x05, 5	; 5
 1ba:	8f e8       	ldi	r24, 0x8F	; 143
 1bc:	90 e1       	ldi	r25, 0x10	; 16
 1be:	01 97       	sbiw	r24, 0x01	; 1
 1c0:	f1 f7       	brne	.-4      	; 0x1be <scan_keypad+0x144>
 1c2:	00 00       	nop
					_delay_us(16958);
					NOTE_OFF;
 1c4:	2d 98       	cbi	0x05, 5	; 5
 1c6:	8f e8       	ldi	r24, 0x8F	; 143
 1c8:	90 e1       	ldi	r25, 0x10	; 16
 1ca:	01 97       	sbiw	r24, 0x01	; 1
 1cc:	f1 f7       	brne	.-4      	; 0x1ca <scan_keypad+0x150>
 1ce:	00 00       	nop
 1d0:	73 cf       	rjmp	.-282    	; 0xb8 <scan_keypad+0x3e>
					_delay_us(16958);
				}
				else if (col == 5 && row == 3)	//G
 1d2:	23 30       	cpi	r18, 0x03	; 3
 1d4:	31 05       	cpc	r19, r1
 1d6:	09 f0       	breq	.+2      	; 0x1da <scan_keypad+0x160>
 1d8:	9c c0       	rjmp	.+312    	; 0x312 <scan_keypad+0x298>
				{
					NOTE_ON;
 1da:	2d 9a       	sbi	0x05, 5	; 5
 1dc:	81 ea       	ldi	r24, 0xA1	; 161
 1de:	9f e0       	ldi	r25, 0x0F	; 15
 1e0:	01 97       	sbiw	r24, 0x01	; 1
 1e2:	f1 f7       	brne	.-4      	; 0x1e0 <scan_keypad+0x166>
 1e4:	00 00       	nop
					_delay_us(16006);
					NOTE_OFF;
 1e6:	2d 98       	cbi	0x05, 5	; 5
 1e8:	81 ea       	ldi	r24, 0xA1	; 161
 1ea:	9f e0       	ldi	r25, 0x0F	; 15
 1ec:	01 97       	sbiw	r24, 0x01	; 1
 1ee:	f1 f7       	brne	.-4      	; 0x1ec <scan_keypad+0x172>
 1f0:	00 00       	nop
 1f2:	93 c0       	rjmp	.+294    	; 0x31a <scan_keypad+0x2a0>
					_delay_us(16006);
				}
				else if (col == 6 && row == 0)	//G# Ab
 1f4:	66 30       	cpi	r22, 0x06	; 6
 1f6:	71 05       	cpc	r23, r1
 1f8:	09 f0       	breq	.+2      	; 0x1fc <scan_keypad+0x182>
 1fa:	48 c0       	rjmp	.+144    	; 0x28c <scan_keypad+0x212>
 1fc:	ef 2b       	or	r30, r31
 1fe:	79 f4       	brne	.+30     	; 0x21e <scan_keypad+0x1a4>
				{
					NOTE_ON;
 200:	2d 9a       	sbi	0x05, 5	; 5
 202:	80 ec       	ldi	r24, 0xC0	; 192
 204:	9e e0       	ldi	r25, 0x0E	; 14
 206:	01 97       	sbiw	r24, 0x01	; 1
 208:	f1 f7       	brne	.-4      	; 0x206 <scan_keypad+0x18c>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <scan_keypad+0x192>
 20c:	00 00       	nop
					_delay_us(15108);
					NOTE_OFF;
 20e:	2d 98       	cbi	0x05, 5	; 5
 210:	80 ec       	ldi	r24, 0xC0	; 192
 212:	9e e0       	ldi	r25, 0x0E	; 14
 214:	01 97       	sbiw	r24, 0x01	; 1
 216:	f1 f7       	brne	.-4      	; 0x214 <scan_keypad+0x19a>
 218:	00 c0       	rjmp	.+0      	; 0x21a <scan_keypad+0x1a0>
 21a:	00 00       	nop
 21c:	4d cf       	rjmp	.-358    	; 0xb8 <scan_keypad+0x3e>
					_delay_us(15108);
				}
				else if (col == 6 && row == 1)	//A
 21e:	21 30       	cpi	r18, 0x01	; 1
 220:	31 05       	cpc	r19, r1
 222:	79 f4       	brne	.+30     	; 0x242 <scan_keypad+0x1c8>
				{
					NOTE_ON;
 224:	2d 9a       	sbi	0x05, 5	; 5
 226:	8c ee       	ldi	r24, 0xEC	; 236
 228:	9d e0       	ldi	r25, 0x0D	; 13
 22a:	01 97       	sbiw	r24, 0x01	; 1
 22c:	f1 f7       	brne	.-4      	; 0x22a <scan_keypad+0x1b0>
 22e:	00 c0       	rjmp	.+0      	; 0x230 <scan_keypad+0x1b6>
 230:	00 00       	nop
					_delay_us(14260);
					NOTE_OFF;
 232:	2d 98       	cbi	0x05, 5	; 5
 234:	8c ee       	ldi	r24, 0xEC	; 236
 236:	9d e0       	ldi	r25, 0x0D	; 13
 238:	01 97       	sbiw	r24, 0x01	; 1
 23a:	f1 f7       	brne	.-4      	; 0x238 <scan_keypad+0x1be>
 23c:	00 c0       	rjmp	.+0      	; 0x23e <scan_keypad+0x1c4>
 23e:	00 00       	nop
 240:	3b cf       	rjmp	.-394    	; 0xb8 <scan_keypad+0x3e>
					_delay_us(14260);
				}
				else if (col == 6 && row == 2)	//A# Bb
 242:	22 30       	cpi	r18, 0x02	; 2
 244:	31 05       	cpc	r19, r1
 246:	79 f4       	brne	.+30     	; 0x266 <scan_keypad+0x1ec>
				{
					NOTE_ON;
 248:	2d 9a       	sbi	0x05, 5	; 5
 24a:	84 e2       	ldi	r24, 0x24	; 36
 24c:	9d e0       	ldi	r25, 0x0D	; 13
 24e:	01 97       	sbiw	r24, 0x01	; 1
 250:	f1 f7       	brne	.-4      	; 0x24e <scan_keypad+0x1d4>
 252:	00 c0       	rjmp	.+0      	; 0x254 <scan_keypad+0x1da>
 254:	00 00       	nop
					_delay_us(13460);
					NOTE_OFF;
 256:	2d 98       	cbi	0x05, 5	; 5
 258:	84 e2       	ldi	r24, 0x24	; 36
 25a:	9d e0       	ldi	r25, 0x0D	; 13
 25c:	01 97       	sbiw	r24, 0x01	; 1
 25e:	f1 f7       	brne	.-4      	; 0x25c <scan_keypad+0x1e2>
 260:	00 c0       	rjmp	.+0      	; 0x262 <scan_keypad+0x1e8>
 262:	00 00       	nop
 264:	29 cf       	rjmp	.-430    	; 0xb8 <scan_keypad+0x3e>
					_delay_us(13460);
				}
				else if (col == 6 && row == 3)	//B
 266:	23 30       	cpi	r18, 0x03	; 3
 268:	31 05       	cpc	r19, r1
 26a:	09 f0       	breq	.+2      	; 0x26e <scan_keypad+0x1f4>
 26c:	52 c0       	rjmp	.+164    	; 0x312 <scan_keypad+0x298>
				{
					NOTE_ON;
 26e:	2d 9a       	sbi	0x05, 5	; 5
 270:	87 e6       	ldi	r24, 0x67	; 103
 272:	9c e0       	ldi	r25, 0x0C	; 12
 274:	01 97       	sbiw	r24, 0x01	; 1
 276:	f1 f7       	brne	.-4      	; 0x274 <scan_keypad+0x1fa>
 278:	00 c0       	rjmp	.+0      	; 0x27a <scan_keypad+0x200>
 27a:	00 00       	nop
					_delay_us(12704);
					NOTE_OFF;
 27c:	2d 98       	cbi	0x05, 5	; 5
 27e:	87 e6       	ldi	r24, 0x67	; 103
 280:	9c e0       	ldi	r25, 0x0C	; 12
 282:	01 97       	sbiw	r24, 0x01	; 1
 284:	f1 f7       	brne	.-4      	; 0x282 <scan_keypad+0x208>
 286:	00 c0       	rjmp	.+0      	; 0x288 <scan_keypad+0x20e>
 288:	00 00       	nop
 28a:	47 c0       	rjmp	.+142    	; 0x31a <scan_keypad+0x2a0>
					_delay_us(12704);
				}
				else if (col == 7 && row == 0)	//C5
 28c:	67 30       	cpi	r22, 0x07	; 7
 28e:	71 05       	cpc	r23, r1
 290:	09 f0       	breq	.+2      	; 0x294 <scan_keypad+0x21a>
 292:	3f c0       	rjmp	.+126    	; 0x312 <scan_keypad+0x298>
 294:	ef 2b       	or	r30, r31
 296:	69 f4       	brne	.+26     	; 0x2b2 <scan_keypad+0x238>
				{
					NOTE_ON;
 298:	2d 9a       	sbi	0x05, 5	; 5
 29a:	85 eb       	ldi	r24, 0xB5	; 181
 29c:	9b e0       	ldi	r25, 0x0B	; 11
 29e:	01 97       	sbiw	r24, 0x01	; 1
 2a0:	f1 f7       	brne	.-4      	; 0x29e <scan_keypad+0x224>
 2a2:	00 c0       	rjmp	.+0      	; 0x2a4 <scan_keypad+0x22a>
					_delay_us(11991);
					NOTE_OFF;
 2a4:	2d 98       	cbi	0x05, 5	; 5
 2a6:	85 eb       	ldi	r24, 0xB5	; 181
 2a8:	9b e0       	ldi	r25, 0x0B	; 11
 2aa:	01 97       	sbiw	r24, 0x01	; 1
 2ac:	f1 f7       	brne	.-4      	; 0x2aa <scan_keypad+0x230>
 2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <scan_keypad+0x236>
 2b0:	03 cf       	rjmp	.-506    	; 0xb8 <scan_keypad+0x3e>
					_delay_us(11991);
				}
				else if (col == 7 && row == 1)	//C# Db
 2b2:	21 30       	cpi	r18, 0x01	; 1
 2b4:	31 05       	cpc	r19, r1
 2b6:	69 f4       	brne	.+26     	; 0x2d2 <scan_keypad+0x258>
				{
					NOTE_ON;
 2b8:	2d 9a       	sbi	0x05, 5	; 5
 2ba:	81 e4       	ldi	r24, 0x41	; 65
 2bc:	9b e0       	ldi	r25, 0x0B	; 11
 2be:	01 97       	sbiw	r24, 0x01	; 1
 2c0:	f1 f7       	brne	.-4      	; 0x2be <scan_keypad+0x244>
 2c2:	00 00       	nop
					_delay_us(11526);
					NOTE_OFF;
 2c4:	2d 98       	cbi	0x05, 5	; 5
 2c6:	81 e4       	ldi	r24, 0x41	; 65
 2c8:	9b e0       	ldi	r25, 0x0B	; 11
 2ca:	01 97       	sbiw	r24, 0x01	; 1
 2cc:	f1 f7       	brne	.-4      	; 0x2ca <scan_keypad+0x250>
 2ce:	00 00       	nop
 2d0:	f3 ce       	rjmp	.-538    	; 0xb8 <scan_keypad+0x3e>
					_delay_us(11526);
				}
				else if (col == 7 && row == 2)	//D
 2d2:	22 30       	cpi	r18, 0x02	; 2
 2d4:	31 05       	cpc	r19, r1
 2d6:	69 f4       	brne	.+26     	; 0x2f2 <scan_keypad+0x278>
				{
					NOTE_ON;
 2d8:	2d 9a       	sbi	0x05, 5	; 5
 2da:	8e e6       	ldi	r24, 0x6E	; 110
 2dc:	9a e0       	ldi	r25, 0x0A	; 10
 2de:	01 97       	sbiw	r24, 0x01	; 1
 2e0:	f1 f7       	brne	.-4      	; 0x2de <scan_keypad+0x264>
 2e2:	00 c0       	rjmp	.+0      	; 0x2e4 <scan_keypad+0x26a>
					_delay_us(10683);
					NOTE_OFF;
 2e4:	2d 98       	cbi	0x05, 5	; 5
 2e6:	8e e6       	ldi	r24, 0x6E	; 110
 2e8:	9a e0       	ldi	r25, 0x0A	; 10
 2ea:	01 97       	sbiw	r24, 0x01	; 1
 2ec:	f1 f7       	brne	.-4      	; 0x2ea <scan_keypad+0x270>
 2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <scan_keypad+0x276>
 2f0:	e3 ce       	rjmp	.-570    	; 0xb8 <scan_keypad+0x3e>
					_delay_us(10683);
				}
				else if (col == 7 && row == 3)	//D# Eb
 2f2:	23 30       	cpi	r18, 0x03	; 3
 2f4:	31 05       	cpc	r19, r1
 2f6:	c1 f4       	brne	.+48     	; 0x328 <scan_keypad+0x2ae>
				{
					NOTE_ON;
 2f8:	2d 9a       	sbi	0x05, 5	; 5
 2fa:	88 ed       	ldi	r24, 0xD8	; 216
 2fc:	99 e0       	ldi	r25, 0x09	; 9
 2fe:	01 97       	sbiw	r24, 0x01	; 1
 300:	f1 f7       	brne	.-4      	; 0x2fe <scan_keypad+0x284>
 302:	00 c0       	rjmp	.+0      	; 0x304 <scan_keypad+0x28a>
					_delay_us(10083);
					NOTE_OFF;
 304:	2d 98       	cbi	0x05, 5	; 5
 306:	88 ed       	ldi	r24, 0xD8	; 216
 308:	99 e0       	ldi	r25, 0x09	; 9
 30a:	01 97       	sbiw	r24, 0x01	; 1
 30c:	f1 f7       	brne	.-4      	; 0x30a <scan_keypad+0x290>
 30e:	00 c0       	rjmp	.+0      	; 0x310 <scan_keypad+0x296>
 310:	04 c0       	rjmp	.+8      	; 0x31a <scan_keypad+0x2a0>
{
	for (int col = 4; col < 8; col++)
	{
		PORTD |= 0xFF;		//reset
		PORTD &= ~(1<<col);		//sets specific PORTD/PIN(col) to 0 and everything else 1.
		for (int row = 0; row < 4; row++)
 312:	44 30       	cpi	r20, 0x04	; 4
 314:	51 05       	cpc	r21, r1
 316:	0c f4       	brge	.+2      	; 0x31a <scan_keypad+0x2a0>
 318:	cf ce       	rjmp	.-610    	; 0xb8 <scan_keypad+0x3e>

}

void scan_keypad()
{
	for (int col = 4; col < 8; col++)
 31a:	6f 5f       	subi	r22, 0xFF	; 255
 31c:	7f 4f       	sbci	r23, 0xFF	; 255
 31e:	68 30       	cpi	r22, 0x08	; 8
 320:	71 05       	cpc	r23, r1
 322:	09 f0       	breq	.+2      	; 0x326 <scan_keypad+0x2ac>
 324:	b7 ce       	rjmp	.-658    	; 0x94 <scan_keypad+0x1a>
 326:	04 c0       	rjmp	.+8      	; 0x330 <scan_keypad+0x2b6>
	{
		PORTD |= 0xFF;		//reset
		PORTD &= ~(1<<col);		//sets specific PORTD/PIN(col) to 0 and everything else 1.
		for (int row = 0; row < 4; row++)
 328:	44 30       	cpi	r20, 0x04	; 4
 32a:	51 05       	cpc	r21, r1
 32c:	0c f4       	brge	.+2      	; 0x330 <scan_keypad+0x2b6>
 32e:	c4 ce       	rjmp	.-632    	; 0xb8 <scan_keypad+0x3e>
					_delay_us(10083);
				}
			}
		}
	}
 330:	df 91       	pop	r29
 332:	cf 91       	pop	r28
 334:	1f 91       	pop	r17
 336:	0f 91       	pop	r16
 338:	ff 90       	pop	r15
 33a:	08 95       	ret

0000033c <main>:

void scan_keypad();

void main()
{
	DDRB |= 0x00;
 33c:	84 b1       	in	r24, 0x04	; 4
 33e:	84 b9       	out	0x04, r24	; 4
	DDRB |= (1<<DDB5);
 340:	25 9a       	sbi	0x04, 5	; 4
	DDRD |= 0xF0;
 342:	8a b1       	in	r24, 0x0a	; 10
 344:	80 6f       	ori	r24, 0xF0	; 240
 346:	8a b9       	out	0x0a, r24	; 10
	PORTB |= 0x0F;	//Low nibble
 348:	85 b1       	in	r24, 0x05	; 5
 34a:	8f 60       	ori	r24, 0x0F	; 15
 34c:	85 b9       	out	0x05, r24	; 5
	PORTD |= 0xF0;	//High nibble
 34e:	8b b1       	in	r24, 0x0b	; 11
 350:	80 6f       	ori	r24, 0xF0	; 240
 352:	8b b9       	out	0x0b, r24	; 11
	while(1)
	{
		scan_keypad();
 354:	92 de       	rcall	.-732    	; 0x7a <scan_keypad>
	}
 356:	fe cf       	rjmp	.-4      	; 0x354 <main+0x18>

00000358 <_exit>:
 358:	f8 94       	cli

0000035a <__stop_program>:
 35a:	ff cf       	rjmp	.-2      	; 0x35a <__stop_program>
